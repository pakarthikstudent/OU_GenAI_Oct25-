import oracledb

# ---------------------------
# 1️ Connection parameters
# ---------------------------
username = "student"
password = "apelix"
dsn = "localhost:1521/FREEPDB1"  # host:port/service_name

# ---------------------------
# 2️ Connect to Oracle
# ---------------------------
connection = oracledb.connect(user=username, password=password, dsn=dsn)
print("Connected to Oracle!")
cursor = connection.cursor()

# ---------------------------
# 3️ Drop table if it exists
# ---------------------------
try:
    cursor.execute("DROP TABLE employees CASCADE CONSTRAINTS")
    print("Existing 'employees' table dropped.")
except oracledb.DatabaseError as e:
    error_obj, = e.args
    # ORA-00942 = table does not exist
    if error_obj.code == 942:
        print("'employees' table does not exist, creating new one.")
    else:
        raise

# ---------------------------
# 4️ Create table
# ---------------------------
create_table_sql = """
CREATE TABLE employees (
    emp_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50),
    last_name  VARCHAR2(50),
    hire_date  DATE DEFAULT SYSDATE,
    salary     NUMBER(10,2)
)
"""
cursor.execute(create_table_sql)
print("Table 'employees' created successfully!")

# ---------------------------
# 5️ Insert sample data
# ---------------------------
insert_sql = "INSERT INTO employees (first_name, last_name, salary) VALUES (:1, :2, :3)"
employees = [
    ('Karthik', 'Palanik', 60000),
    ('Preethi', 'R', 52000),
    ('Akshay', 'N', 45000)
]
for emp in employees:
    cursor.execute(insert_sql, emp)

connection.commit()
print("Inserted sample data!")

# ---------------------------
# 6️ Query and display data
# ---------------------------
cursor.execute("SELECT emp_id, first_name, last_name, hire_date, salary FROM employees")
rows = cursor.fetchall()
print("\nEmployees table data:")
for row in rows:
    print(row)

# ---------------------------
# 7️ Close connection
# ---------------------------
cursor.close()
connection.close()
print("\nConnection close")
